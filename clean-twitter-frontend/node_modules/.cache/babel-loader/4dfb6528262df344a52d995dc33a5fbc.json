{"ast":null,"code":"var _jsxFileName = \"/Users/joetong/Coding/clean-twitter/clean-twitter-frontend/src/components/users/SearchBox.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { searchUser } from \"../../services/userService\";\n\nclass SearchBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchedUsersResult: [],\n      inputSearchedValue: \"\"\n    };\n\n    this.handleOnChange = async ({\n      currentTarget: search\n    }) => {\n      console.log(search);\n      const searchedUsersResult = await searchUser(search.value);\n      this.setState({\n        searchedUsersResult\n      });\n    };\n\n    this.handleEnter = e => {//console.log(e.currentTarget);\n      //if (key === \"Enter\") window.location = \"tweets/\" + typedIn.value;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"free-solo-demo\",\n      freeSolo: true,\n      options: this.state.searchedUsersResult,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        size: \"small\",\n        label: \"Twitter Handler\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.handleOnChange,\n        onKeyPress: this.handleEnter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default SearchBox;","map":{"version":3,"sources":["/Users/joetong/Coding/clean-twitter/clean-twitter-frontend/src/components/users/SearchBox.jsx"],"names":["React","Component","Redirect","TextField","Autocomplete","searchUser","SearchBox","state","searchedUsersResult","inputSearchedValue","handleOnChange","currentTarget","search","console","log","value","setState","handleEnter","e","render","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,UAAT,QAA2B,4BAA3B;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCM,KADgC,GACxB;AAAEC,MAAAA,mBAAmB,EAAE,EAAvB;AAA2BC,MAAAA,kBAAkB,EAAE;AAA/C,KADwB;;AAAA,SAGhCC,cAHgC,GAGf,OAAO;AAAEC,MAAAA,aAAa,EAAEC;AAAjB,KAAP,KAAqC;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,YAAMJ,mBAAmB,GAAG,MAAMH,UAAU,CAACO,MAAM,CAACG,KAAR,CAA5C;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KAP+B;;AAAA,SAShCS,WATgC,GASjBC,CAAD,IAAO,CACnB;AACA;AACD,KAZ+B;AAAA;;AAchCC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,YAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWC,mBAHtB;AAIE,MAAA,WAAW,EAAGY,MAAD,iBACX,oBAAC,SAAD,oBACMA,MADN;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAC,iBAHR;AAIE,QAAA,MAAM,EAAC,QAJT;AAKE,QAAA,OAAO,EAAC,UALV;AAME,QAAA,QAAQ,EAAE,KAAKV,cANjB;AAOE,QAAA,UAAU,EAAE,KAAKO,WAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAkBD;;AAjC+B;;AAoClC,eAAeX,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { searchUser } from \"../../services/userService\";\n\nclass SearchBox extends Component {\n  state = { searchedUsersResult: [], inputSearchedValue: \"\" };\n\n  handleOnChange = async ({ currentTarget: search }) => {\n    console.log(search);\n    const searchedUsersResult = await searchUser(search.value);\n    this.setState({ searchedUsersResult });\n  };\n\n  handleEnter = (e) => {\n    //console.log(e.currentTarget);\n    //if (key === \"Enter\") window.location = \"tweets/\" + typedIn.value;\n  };\n\n  render() {\n    return (\n      <Autocomplete\n        id=\"free-solo-demo\"\n        freeSolo\n        options={this.state.searchedUsersResult}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            size=\"small\"\n            label=\"Twitter Handler\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.handleOnChange}\n            onKeyPress={this.handleEnter}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default SearchBox;\n"]},"metadata":{},"sourceType":"module"}